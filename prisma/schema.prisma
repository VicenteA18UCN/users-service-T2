// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  firstLastName   String
  secondLastName  String
  rut             String    @unique
  email           String    @unique
  hashedPassword  String
  isEnabled       Boolean   @default(true)
  careerId        String    @db.Uuid
  roleId          String    @db.Uuid
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  career          Career    @relation(fields: [careerId], references: [id])
  role            Role      @relation(fields: [roleId], references: [id])
  progress        UserProgress[]
}

model UserProgress {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId     String    @db.Uuid
  subjectId  String    @db.Uuid
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id])
  subject    Subject   @relation(fields: [subjectId], references: [id])
}

model Role {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users       User[]
}

model Career {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
}

model Subject {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code       String
  name       String
  department String
  credits    Int
  semester   Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  progress   UserProgress[]
}